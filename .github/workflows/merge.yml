name: Node.js CI

on:
  pull_request:
    branches: [main]

jobs:
  test_and_analysis:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      # Paso 1: Checkout del código
      - uses: actions/checkout@v4

      # Paso 2: Configurar Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Paso 3: Instalar dependencias
      - run: npm ci

      # Paso 4: Construir el proyecto si tiene un script de build
      - run: npm run build --if-present

      # Paso 5: Ejecutar los tests
      - run: npm test

      # Paso 6: Instalar y ejecutar el análisis de SonarCloud
      - run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATIONKEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true  # Esto garantiza que la pipeline falle si no pasa el Quality Gate
        env:
          SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}

